#!/bin/bash
source ./psm4sshdemo.config

main() {
  stop_container
  build_image
  start_image_privileged $PSMPBASEIMAGE
  unzip_install_file
  setup_config_files
  verify_sig
  install_packages
}

####################
stop_container() {
  echo "Stopping running client..."
  docker stop $PSMP_CNAME &> /dev/null ; docker rm $PSMP_CNAME &> /dev/null
}

####################
build_image() {
  echo "Building base image..."
  docker build -t $PSMPBASEIMAGE .
}

####################
start_image_unprivileged() {
  local image_name=$1; shift

  echo "Starting image $image_name in unprivileged mode..."
  docker run -d 	\
    --name $PSMP_CNAME	\
    --entrypoint sh	\
    $image_name		\
    -c "sleep infinity"
}

####################
unzip_install_file() {
  echo "Copying zip file to container..."
  docker cp $PSMPZIPDIR/$PSMPZIPFILE $PSMP_CNAME:/tmp/$PSMPZIPFILE
  echo "Unzipping installation file..."
  docker exec -i $PSMP_CNAME bash -c "cd /tmp; unzip /tmp/$PSMPZIPFILE"

  # rename install directory to one without blank spaces in it
  export PSMPINSTDIR="$(docker exec -i $PSMP_CNAME ls /tmp | grep Privilege)"
  docker exec $PSMP_CNAME bash -c "mv /tmp/\"$PSMPINSTDIR\" /tmp/psmpinst"
}

####################
start_image_privileged() {
  local image_name=$1; shift

  echo "Starting image $image_name in privileged mode..."
  docker run -dt 	\
    --name $PSMP_CNAME	\
    --restart always 	\
    --privileged	\
    -e container=docker \
    -v /sys/fs/cgroup:/sys/fs/cgroup	\
    -p $PSMP_PORT:22	\
    --entrypoint sh	\
    $image_name		\
    -c "/usr/lib/systemd/systemd --system --unit=basic.target"
}

####################
setup_config_files() {
  echo "Copying vault.ini & parms files to container..."
  docker cp etc/vault.ini $PSMP_CNAME:/tmp/psmpinst
  docker cp etc/psmpparms $PSMP_CNAME:/var/tmp/psmpparms
  docker cp etc/install_cyberark_sshd.sh $PSMP_CNAME:/tmp/psmpinst/install_cyberark_sshd.sh
  docker cp etc/sshd_config $PSMP_CNAME:/etc/ssh/sshd_config
  docker cp etc/systemd_sshd.service $PSMP_CNAME:/usr/lib/systemd/system/sshd.service
  docker exec $PSMP_CNAME bash -c "	\
	cd /tmp/psmpinst; \
	chmod 755 CreateCredFile; \
	/tmp/psmpinst/CreateCredFile user.cred PASSWORD -username $VAULT_ADMIN_NAME -password $VAULT_ADMIN_PWD \
  "
}

####################
verify_sig() {
  export PSMP_RPM=$(docker exec -i $PSMP_CNAME ls /tmp/psmpinst | grep ^CARK | grep rpm$)
  echo "Verifying RPM package signature..."
  docker exec $PSMP_CNAME bash -c "cd /tmp/psmpinst; rpm --import RPM-GPG-KEY-CyberArk; rpm -K -v $PSMP_RPM"
}

####################
install_packages() {
# Uncomment if enabling AD Bridge
#  export LIBSSH_RPM=$(docker exec -i $PSMP_CNAME ls /tmp/psmpinst/Pre-Requisites | grep ^libssh | grep rpm$)
#  docker exec $PSMP_CNAME rpm -i /tmp/psmpinst/Pre-Requisites/$LIBSSH_RPM

  export PSMP_RPM=$(docker exec -i $PSMP_CNAME ls /tmp/psmpinst | grep ^CARK | grep rpm$)
  docker exec $PSMP_CNAME sudo rpm -v -i /tmp/psmpinst/$PSMP_RPM
}

main "$@"
